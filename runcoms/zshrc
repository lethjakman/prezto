#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Aliases
alias ll="ls -lta"
alias llh="ls -lt | head"
alias chrome_no_extensions="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --disable-extensions"
alias grh='grep --include="*.html" --include="*.haml"'


# GIT STUFF
function git_st_each {
  for d in $(ls -d */)
  do
      echo "DIRECTORY: $d"; git -C $d status; echo "\n"
  done
}

function git_each_version() {
  for d in $(ls -d */); do
    (
      cd "$d" &> /dev/null
      sha=$(git rev-parse HEAD)
      repo_name=$(basename `git rev-parse --show-toplevel`)
      echo "$sha - $repo_name"
    )
  done
}

function gchsh {
  gc=$(echo $(git rev-parse HEAD))
  printf ${gc:0:7} | pbcopy
}

function get_changed {
  for d in $(ls -d */)
  do
    CHANGED=$(git -C "$d" diff-index --name-only HEAD --)
    if [ -n "$CHANGED"  ]; then
      echo "$d"
    fi
  done
}

# RAILS STUFF
function gt {
  ripper-tags -R
  CoffeeTags -Ra
}

function bundle_update_all {
  for d in $(ls -d */)
  do
    echo "DIRECTORY: $d"; $(cd $d; bundle update); echo "UPDATED\n"
  done
}

function set_test_db {
  RAILS_ENV=test bundle exec rake db:nuke_schema;
  RAILS_ENV=test bundle exec rake db:setup;
}

function yml_link {
  if [ -f "./database.yml" ]; then
    echo "database.yml already exists"
  else
    ln -s /Users/kardosa/Documents/workspace/database.yml ./
  fi

  if [ -f "online.yml" ]; then
    echo "online.yml already exists"
  else
    ln -s /Users/kardosa/Documents/workspace/online.yml ./
  fi
}

function set_yml {
  if [ -d "./config" ]; then
    (
      cd config &> /dev/null
      yml_link
    )
    if [ -d "spec/dummy/config" ]; then
      (
        cd spec/dummy/config &> /dev/null
        yml_link
      )
    fi
  else
    echo "you don't appear to be in a rails app";
  fi
}

function set_gemset {
  echo "$1" >> ./.rbenv_gemsets
  echo '.rbenv_gemsets' >> ./.git/info/exclude
}

#TMUX
function tms {
  if [ $# -lt 1 ]; then
      echo "ERROR: not enough arguments" 1>&2
      echo "usage: $(basename $0) <directory>" 1>&2
      exit 1
  fi

  directory=$1
  session_name=$(basename $directory)
  test -d $directory || { echo "ERROR: no directory: $directory" 1>&2; return 1; }

  (
      cd $directory
      unset TMUX
      tmux new-session -ds $session_name
  )
}

# BASH STUFF
function td {
  (
    if [ -d "spec/dummy" ]; then
      cd spec/dummy > /dev/null
    else
      echo "Spec dummy doesn't exist"
      return 0
    fi
    exec "$@"
  )
}

function get_using_port {
  cols=( $(sudo lsof -i -P | grep "*:$1")  )
  printf "${cols[2]}"
}

# Path
cdpath=(
    $HOME
    $HOME/Documents
    $HOME/Documents/workspace
    /Users/kardosa/Documents/workspace/apps_env
    $cdpath
)

export EC2_HOME="/opt/local/ec2-api-tools-1.6.12.0"

export JAVA_HOME="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"
export PATH=${JAVA_HOME}/bin:$PATH
# Customize to your needs...
#export PATH=$EC2_HOME/bin:$PATH:/Users/alex/Qt5.1.0/5.1.0/clang_64/bin/:/opt/local/bin:/opt/local/sbin:/Users/alex/bin:/Applications/Postgres.app/Contents/MacOS/bin:/Users/alex/.rvm/gems/ruby-2.0.0-tv2_0_0_247/bin:/Users/alex/.rvm/gems/ruby-2.0.0-tv2_0_0_247@global/bin:/Users/alex/.rvm/rubies/ruby-2.0.0-tv2_0_0_247/bin:/Users/alex/.rvm/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/MacGPG2/bin:/Library/Frameworks/Firebird.framework/Resources/bin:/opt/local/lib/mysql5/bin/:/Users/alex/.rvm/rubies/default/bin/:/Users/alex/.rvm/bin:/opt/local/Library/Frameworks/Python.framework/Versions/2.7/bin/:/Users/alexanderkardos/bin

export JAVA_HOME=$(/usr/libexec/java_home)

export REDIS_ENV="development"
export GOPATH=$HOME/go

alias less=$PAGER
alias zless=$PAGER
bindkey -v

bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1

if [ "$WORKING_ENV" = "work" ]; then
  source "$HOME/.environment/local/.$WORKING_ENV"
fi

source ~/.fzf.zsh

source /opt/boxen/env.sh

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export TERM=xterm-256color

export PATH=$HOME/toolbox/bin:$PATH
export PATH=$HOME/.local/bin/:$PATH
